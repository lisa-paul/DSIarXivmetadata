0.0 - func to ADD NEW COLS 
func(firstfile)
func(secondfile) 
 --> csv or something

def goes here:

#	from nltk.stem import #a shit ton
from nltk.tokenize import word_tokenize

lemmatizer = WordNetLemmatizer()
lemmatizer.lemmatize("")

#Create new column containing list of the words in the abstract
abs_tokens = word_tokenize(df['abstract'])
df['abs_tokens'] = abs_tokens

# Add all new columns after stopword removal

# Create new column containing abstract without stopwords
# abs_tokens = word_tokenize(df['abstract'])
# df['abstract_minus_stopwords'] =

# Create new column for the ratio of unique words to total words
# abs_tokens = word_tokenize(df['abstract'])
# unique_words = set(abs_tokens)
# unique_words_ratio =
# df['unique_words_ratio'] =

# Create new column for the count of unique words
# abs_tokens = word_tokenize(df['abstract'])
# unique_words = set(abs_tokens)
# unique_wc =
# df['unique_wc'] =

# Create new column for the total word count
# abs_tokens = word_tokenize(df['abstract'])
# wc =
# df['wc'] =

# Create new column for counting special characters
# df['special_char_count'] =

# Calculate readability scores such as Flesch-Kincaid
# flesch_kincaid = calculate_flesch_kincaid(df['abstract'])
# df['flesch_kincaid'] =

# Create new columns for parts of speech (e.g., noun, adjective)
# abs_tokens = word_tokenize(df['abstract'])
# pos_tags = nltk.pos_tag(abs_tokens)
# noun_column = sum(1 for tag in pos_tags if tag[1] == 'NN')
# df['noun_column'] =
# adjective_column = sum(1 for tag in pos_tags if tag[1] == 'JJ')
# df['adjective_column'] =
# ... (repeat for other parts of speech)










# - Uncomment and complete any unfinished code above when ready to add more columns
#except SAY CODE BELOW







add char_count

do 2 POS columns, just do noun & adj & verb 
noun_list = 
noun_count = 


# Possible disadvantages of Readability Score:
# Applies Mathematics to Literature which isnâ€™t always a good idea.

# I chose these 2 metrics because I liked their names
# and because they are designed for technical and academic writing

#SMOG Index 
#	The SMOG Index is designed to estimate the years of education a person needs to understand a piece of writing. It takes into account the number of polysyllabic words in a sample of text.
#RIX (Readability Index):
#	The RIX is specifically designed for assessing the readability of technical and scientific texts. It considers the number of long words and the number of sentences in a passage.




